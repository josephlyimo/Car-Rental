<h2>Booking History</h2>

{{#if bookings.length}}
<table border="1" cellpadding="5" cellspacing="0">
  <thead>
    <tr>
      <th>Car</th>
      <th>Purpose</th>
      <th>Start Date</th>
      <th>End Date</th>
      <th>Status</th>
      <th>Actions</th>
    </tr>
  </thead>
  <tbody>
    {{#each bookings}}
    <tr>
      <td>{{car_name}} ({{color}}, {{type}})</td>
      <td>{{purpose}}</td>
      <td>{{start_date}}</td>
      <td>{{end_date}}</td>
      <td>{{status}}</td>
      <td>
        {{#ifCond status "==" "rented"}}
          <button class="return-btn" data-id="{{id}}">Mark as Returned</button>
        {{else ifCond status "==" "pending"}}
          <button class="cancel-btn" data-id="{{id}}">Cancel Booking</button>
        {{else}}
          -
        {{/ifCond}}
      </td>
    </tr>
    {{/each}}
  </tbody>
</table>
{{else}}
<p>No bookings found.</p>
{{/if}}

<script>
  const notification = document.createElement('div');
  notification.id = 'notification';
  notification.style.position = 'fixed';
  notification.style.top = '20px';
  notification.style.left = '50%';
  notification.style.transform = 'translateX(-50%)';
  notification.style.backgroundColor = '#4caf50';
  notification.style.color = 'white';
  notification.style.padding = '10px';
  notification.style.borderRadius = '5px';
  notification.style.zIndex = '1000';
  notification.style.display = 'none';
  document.body.appendChild(notification);

  function showNotification(message, isError = false) {
    notification.textContent = message;
    notification.style.backgroundColor = isError ? '#f44336' : '#4caf50';
    notification.style.display = 'block';
    setTimeout(() => {
      notification.style.display = 'none';
    }, 5000);
  }

  document.querySelectorAll('.return-btn').forEach(button => {
    button.addEventListener('click', async () => {
      const bookingId = button.getAttribute('data-id');
      if (confirm('Mark this booking as returned?')) {
        try {
          const response = await fetch(`/bookings/${bookingId}/return`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' }
          });
          if (response.ok) {
            showNotification('Return marked successfully.');
            location.reload();
          } else {
            const data = await response.json();
            showNotification('Error: ' + data.message, true);
          }
        } catch (err) {
          showNotification('Error: ' + err.message, true);
        }
      }
    });
  });

  // Modal for cancel confirmation
  const modalHtml = `
    <div id="cancelModal" style="display:none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; 
      background: rgba(0,0,0,0.5); z-index: 1001; justify-content: center; align-items: center;">
      <div style="background: white; padding: 20px; border-radius: 5px; max-width: 300px; text-align: center;">
        <p>Are you sure you want to cancel this booking?</p>
        <button id="confirmCancelBtn">OK</button>
        <button id="cancelCancelBtn">Cancel</button>
      </div>
    </div>
  `;
  document.body.insertAdjacentHTML('beforeend', modalHtml);

  const cancelModal = document.getElementById('cancelModal');
  let currentCancelId = null;

  document.querySelectorAll('.cancel-btn').forEach(button => {
    button.addEventListener('click', () => {
      currentCancelId = button.getAttribute('data-id');
      cancelModal.style.display = 'flex';
    });
  });

  document.getElementById('confirmCancelBtn').addEventListener('click', async () => {
    if (!currentCancelId) return;
    try {
      const response = await fetch(`/bookings/${currentCancelId}/cancel`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
      });
      if (response.ok) {
        showNotification('Booking cancelled successfully.');
        location.reload();
      } else {
        const data = await response.json();
        showNotification('Error: ' + data.message, true);
      }
    } catch (err) {
      showNotification('Error: ' + err.message, true);
    } finally {
      cancelModal.style.display = 'none';
      currentCancelId = null;
    }
  });

  document.getElementById('cancelCancelBtn').addEventListener('click', () => {
    cancelModal.style.display = 'none';
    currentCancelId = null;
  });
</script>
