<h2>Book a Car</h2>

<form id="bookingForm">
  {{#if car}}
    <p>Car Name: {{car.name}}</p>
    <p>Car Color: {{car.color}}</p>
    <p>Car Type: {{car.type}}</p>
    <input type="hidden" id="car_id" name="car_id" value="{{car.id}}" />
    <p>Purpose: {{car.type}}</p>
    <input type="hidden" id="purpose" name="purpose" value="{{car.type}}" />
  {{else}}
    {{#with cars.[0]}}
      <p>Car Name: {{name}}</p>
      <p>Car Color: {{color}}</p>
      <p>Car Type: {{type}}</p>
      <input type="hidden" id="car_id" name="car_id" value="{{id}}" />
      <p>Purpose: {{type}}</p>
      <input type="hidden" id="purpose" name="purpose" value="{{type}}" />
    {{/with}}
  {{/if}}

  <label for="start_date">Start Date:</label>
  <input type="date" id="start_date" name="start_date" required>

  <label for="end_date">End Date:</label>
  <input type="date" id="end_date" name="end_date" required>

<script>
  // Set min attribute to today for start_date and end_date inputs
  const today = new Date().toISOString().split('T')[0];
  document.getElementById('start_date').setAttribute('min', today);
  document.getElementById('end_date').setAttribute('min', today);
</script>

  <p id="priceInfo">Price: {{#if car}}{{car.price}}{{else}}{{cars.[0].price}}{{/if}} For 3 days</p>
  <p>Note: If booking exceeds 3 days, price increases by 20,000 per extra day.</p>

  <button type="submit">Book Now</button>
</form>

<script src="https://cdn.jsdelivr.net/npm/dayjs@1/dayjs.min.js"></script>
<script>
  const bookingForm = document.getElementById('bookingForm');
  const startDateInput = document.getElementById('start_date');
  const endDateInput = document.getElementById('end_date');
  const priceInfo = document.getElementById('priceInfo');

  const basePrice = {{#if car}}{{car.price}}{{else}}{{cars.[0].price}}{{/if}};
  const baseRentalDuration = 3;
  const extraDayPrice = 20000;

  function updatePrice() {
    const startDate = dayjs(startDateInput.value);
    const endDate = dayjs(endDateInput.value);
    if (!startDate.isValid() || !endDate.isValid()) {
      priceInfo.textContent = `Price: ${basePrice} For ${baseRentalDuration} days`;
      return;
    }
    const totalDays = endDate.diff(startDate, 'day') + 1;
    if (totalDays <= baseRentalDuration) {
      priceInfo.textContent = `Price: ${basePrice} For ${baseRentalDuration} days`;
    } else {
      const extraDays = totalDays - baseRentalDuration;
      const totalPrice = basePrice + extraDays * extraDayPrice;
      priceInfo.textContent = `Price: ${totalPrice} (Includes extra ${extraDays} day(s) charge)`;
    }
  }

  startDateInput.addEventListener('change', updatePrice);
  endDateInput.addEventListener('change', updatePrice);

  bookingForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(bookingForm);
    const data = {
      car_id: formData.get('car_id'),
      purpose: formData.get('purpose'),
      start_date: formData.get('start_date'),
      end_date: formData.get('end_date')
    };

    try {
      const response = await fetch('/bookings', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });
      if (response.ok) {
        // Show success message on page instead of alert
        const successMessage = document.createElement('div');
        successMessage.textContent = 'Booking created successfully!';
        successMessage.style.backgroundColor = '#4caf50';
        successMessage.style.color = 'white';
        successMessage.style.padding = '10px';
        successMessage.style.borderRadius = '5px';
        successMessage.style.marginBottom = '10px';
        bookingForm.parentNode.insertBefore(successMessage, bookingForm);
        setTimeout(() => {
          window.location.href = '/bookings/history';
        }, 2000);
      } else {
        const resData = await response.json();
        alert('Error: ' + resData.message);
      }
    } catch (err) {
      alert('Error: ' + err.message);
    }
  });
</script>
